import numpy as np
import random

class SimpleEnvironment:
    def __init__(self):
        self.state = 0

    def step(self, action):
        reward = -0.1
        done = False

        # Updating state based on action
        if action == 0:
            self.state += 1
        elif action == 1:
            self.state -= 1

        # Check if terminal state
        if self.state == 5:
            reward = 10
            done = True

        return self.state, reward, done

    def reset(self):
        self.state = 0

class Agent:
    def __init__(self, num_actions, epsilon=1.0):
        self.num_actions = num_actions
        self.epsilon = epsilon

    def act(self, state):
        if random.random() < self.epsilon:
            return random.randint(0, self.num_actions-1)
        else:
            return 0

if __name__ == "__main__":

    env = SimpleEnvironment()
    agent = Agent(num_actions=2, epsilon=0.3)

    episodes = 10

    for e in range(episodes):

        state = env.reset()
        done = False
        reward_sum = 0

        while not done:
            action = agent.act(state)
            next_state, reward, done = env.step(action)
            reward_sum += reward
            state = next_state

        print("Episode {} Reward Sum: {}".format(e, reward_sum))
