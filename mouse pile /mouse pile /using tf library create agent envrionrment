import tensorflow as tf
import numpy as np

# Create a simple environment
class SimpleEnv(tf.keras.Model):
    def __init__(self):
        super().__init__()
        self.state = np.zeros(1)

    def step(self, action):
        if action == 1:
            reward = 1
            self.state[0] += 1
        else:
            reward = -1
            self.state[0] -= 1

        return self.state, reward

env = SimpleEnv()

# Create a simple agent
class SimpleAgent(tf.keras.Model):
    def __init__(self, num_actions):
        super().__init__()
        self.dense = tf.keras.layers.Dense(num_actions)

    @tf.function
    def call(self, inputs):
        x = self.dense(inputs)
        action = tf.random.categorical(x, num_samples=1)
        return action

num_actions = 2
agent = SimpleAgent(num_actions)

# Interact with the environment
state = tf.constant([[0.]])

for _ in range(5):
    action = agent(state)[0,0].numpy()
    next_state, reward = env.step(int(action))

    state = tf.constant([[next_state[0]]])
    print('Action: {}, Reward: {}'.format(action, reward))
